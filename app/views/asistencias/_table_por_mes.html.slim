- total_horas = 0

.alert.alert-success
  .center
    strong Asistencias Mensuales y descripcion del Trabajo Realizado.
.alert.alert-info
  button.close data-dismiss="alert" type="button" 
    i.ace-icon.fa.fa-times
  .center
    | Las horas estan expresadas en HH:MM
table class="table table-striped table-bordered"
  thead
    - if @proyecto_id == "all"
      tr
        th Fecha
        th Descripcion de la Asistencia
        th style="width: 618px;" Descripcion del Trabajo Realizado
    - else
      tr
        th Fecha
        th Check [ In/Out ]
        th Proyecto
        th Hs Dedicadas

  tbody
    - if @proyecto_id == "all"
      - ordenado = asistencias.group_by{|a| a.check_out.horaOutput.strftime("%d/%m/%Y")} 
      - ordenado.each do |fecha, asistencias|
        tr
          td =  l fecha.to_date, format: "%A %d/%m/%Y"
          td
            table.table.table-bordered
              thead
                tr
                  th Check In
                  th Check Out
                  th Total
              tbody
                - total_jornada = 0
                - asistencias.each do |a|
                  - total_jornada += (a.horasTrabajadas*60)*60
                  tr
                    td = a.check_in.horaOutput.strftime("%H:%M")
                    td = a.check_out.horaOutput.strftime("%H:%M")
                    td.center style="background-color: rgba(136, 249, 140, 0.45);" 
                      = Time.at((a.horasTrabajadas*60)*60).utc.strftime("%H:%M")
                tr
                  td style="background-color: rgba(136, 249, 140, 0.45);text-align: right;"
                  td style="background-color: rgba(136, 249, 140, 0.45);text-align: right;" Total Horas: 
                  td.center style="background-color: #8fff93;"
                    strong = Time.at(total_jornada).utc.strftime("%H:%M")

          td
            table.table.table-striped.table-bordered
              thead
                tr
                  th style="width: 316px;" Proyecto
                  th style="width: 98px;" Entrada
                  th style="width: 98px;" Salida
                  th style="width: 118px;" Total
              tbody
                - total_proyecto = 0
                - asistencias.each do |a|                 
                  - detalles_de_horarios = a.horario.get_horarios_correspondientes(a.check_in, a.check_out)
                  - if detalles_de_horarios.size == 0
                    tr
                      td No Tiene Proyectos Asignados.
                      td 00:00
                      td 00:00
                      td.center style="background-color: rgba(136, 249, 140, 0.45);" 00:00
                  - else
                    - detalles_de_horarios.each do |dh|
                      tr
                        td = "#{dh.proyecto.codigo} - #{dh.proyecto.nombre}"
                        td = dh.horaEntrada.strftime("%H:%M")
                        td = dh.horaSalida.strftime("%H:%M")
                        - text, segundos = calcular_horas_trabajadas_en_proyecto(a.check_in.horaOutput, a.check_out.horaOutput, dh)
                        - total_horas += segundos
                        - total_proyecto += segundos
                        td.center style="background-color: rgba(136, 249, 140, 0.45);"  = text

                      / td = calcular_horas_trabajadas_en_proyecto(a.check_in.horaOutput, a.check_out.horaOutput, dh)
                tr
                  td style="background-color: rgba(136, 249, 140, 0.45);text-align: right;"
                  td style="background-color: rgba(136, 249, 140, 0.45);text-align: right;"
                  td style="background-color: rgba(136, 249, 140, 0.45);text-align: right;" Total Horas: 
                  td.center style="background-color: #8fff93;"
                    strong = Time.at(total_proyecto).utc.strftime("%H:%M")
      tr
        td style="background-color: rgba(136, 249, 140, 0.45);text-align: right;"
        th style="background-color: rgba(136, 249, 140, 0.45);text-align: right;" Total de Horas Trabajadas
        - if total_horas != nil
          td.center style="background-color: #8fff93;"
            strong
              - minutes = (total_horas / 60) % 60
              - hours = total_horas / (60 * 60)
              = format("%02d:%02d", hours, minutes)
        - else 
          td 00:00:00
    - else
      - ordenado = asistencias.group_by{|a| a.check_out.horaOutput.strftime("%d/%m/%Y")} 
      - ordenado.each do |fecha, asistencias|
        - total_jornada = 0
        - asistencias.each do |a|
          - detalles_de_horarios = a.get_detalle_horario(@proyecto_id.to_i).each do |dh|
          tr
            td = l a.check_out.horaOutput, format: "%A %d/%m/%Y"
            td = "Entrada: #{a.check_in.horaOutput.strftime("%H:%M")} - Salida: #{a.check_out.horaOutput.strftime("%H:%M")}"
            - detalles_de_horarios.each do |dh|
              td = "#{dh.proyecto.codigo} - #{dh.proyecto.nombre}"
              - text, segundos = calcular_horas_trabajadas_en_proyecto(a.check_in.horaOutput, a.check_out.horaOutput, dh)
              - total_horas += segundos
              = total_jornada += segundos
              td.center = text
        tr
          td
          td
          th style="background-color: rgba(136, 249, 140, 0.45);text-align: right;" Total Jornada:
          - if total_jornada != nil
            td.center style="background-color: #8fff93;"
              strong
                - minutes = (total_jornada / 60) % 60
                - hours = total_jornada / (60 * 60)
                = format("%02d:%02d", hours, minutes)
          - else 
            td 00:00:00

      tr
        td
        td
        td
        td
      tr
        td style="background-color: rgba(136, 249, 140, 0.45);text-align: right;"
        td style="background-color: rgba(136, 249, 140, 0.45);text-align: right;"
        th style="background-color: rgba(136, 249, 140, 0.45);text-align: right;" Total de Horas Trabajadas en el Proyecto: 
        - if total_horas != nil
          td.center style="background-color: #8fff93;"
            strong
              - minutes = (total_horas / 60) % 60
              - hours = total_horas / (60 * 60)
              = format("%02d:%02d", hours, minutes)

              / = Time.at(total_horas).utc.strftime("%H:%M")
        - else 
          td 00:00:00
